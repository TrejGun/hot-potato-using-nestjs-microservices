"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * An errors which gets raised when the timeout
 * exceeded
 *
 * @internal
 */
class TimeoutError extends Error {
}
exports.TimeoutError = TimeoutError;
/**
 * Executes a promise in the given timeout. If the promise
 * does not finish in the given timeout, it will
 * raise a TimeoutError
 *
 * @param {number} ms The timeout in milliseconds
 * @param {Promise<any>} promise The promise which should get executed
 *
 * @internal
 */
exports.promiseTimeout = function (ms, promise) {
    // Create a promise that rejects in <ms> milliseconds
    let timeout = new Promise((_, reject) => {
        let id = setTimeout(() => {
            clearTimeout(id);
            reject(new TimeoutError('Timed out in ' + ms + 'ms.'));
        }, ms);
    });
    // Returns a race between our timeout and the passed in promise
    return Promise.race([promise, timeout]);
};
